{
  "version": 3,
  "sources": ["../client/src/menu.ts", "../client/src/mode.ts", "../client/src/flash.ts", "../client/src/link.ts", "../client/src/modal.ts", "../client/src/editor.ts", "../client/src/theme.ts", "../client/src/socket.ts", "../client/src/app.ts", "../client/src/client.ts"],
  "sourcesContent": ["// Content managed by Project Forge, see [projectforge.md] for details.\nexport function menuInit() {\n  for (const n of Array.from(document.querySelectorAll(\".menu-container .final\"))) {\n    n.scrollIntoView({block: \"nearest\"});\n  }\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nconst l = \"mode-light\"\nconst d = \"mode-dark\"\n\nexport function modeInit() {\n  for (const el of Array.from(document.getElementsByClassName(\"mode-input\"))) {\n    const i = (el as HTMLInputElement);\n    i.onclick = function() {\n      switch (i.value) {\n        case \"\":\n          document.body.classList.remove(l);\n          document.body.classList.remove(d);\n          break;\n        case \"light\":\n          document.body.classList.add(l);\n          document.body.classList.remove(d);\n          break;\n        case \"dark\":\n          document.body.classList.remove(l);\n          document.body.classList.add(d);\n          break;\n      }\n    }\n  }\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nexport function flashInit() {\n  const container = document.getElementById(\"flash-container\")\n  if (container === null) {\n    return;\n  }\n  const x = container.querySelectorAll(\".flash\");\n  if (x.length > 0) {\n    setTimeout(() => {\n      for (const f of x) {\n        const el = f as HTMLElement;\n        el.style.opacity = \"0\";\n        setTimeout(() => el.remove(), 500);\n      }\n    }, 3000)\n  }\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nexport function linkInit() {\n  for (const l of Array.from(document.getElementsByClassName(\"link-confirm\"))) {\n    const el = (l as HTMLAnchorElement);\n    el.onclick = function() {\n      let msg = el.dataset.message as string;\n      if (msg && msg.length === 0) {\n        msg = \"Are you sure?\";\n      }\n      return confirm(msg);\n    }\n  }\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nexport function modalInit() {\n  document.addEventListener('keydown', (event) => {\n    if (event.key === 'Escape') {\n      if (document.location.hash.startsWith(\"#modal-\")) {\n        document.location.hash = \"\";\n      }\n    }\n  })\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nconst selected = \"--selected\";\n\nexport function setSiblingToNull(el: HTMLElement) {\n  const i = el.parentElement!.parentElement!.querySelector(\"input\");\n  if (!i) {\n    throw \"no associated input found\";\n  }\n  i.value = \"\u2205\";\n}\n\nexport function editorInit() {\n  (window as any).pftest.setSiblingToNull = setSiblingToNull;\n\n  let editorCache: { [key: string]: string; } = {};\n  let selectedCache: { [key: string]: HTMLInputElement; } = {};\n  for (const n of Array.from(document.querySelectorAll(\".editor\"))) {\n    const frm = n as HTMLFormElement;\n    const buildCache = () => {\n      editorCache = {};\n      selectedCache = {};\n      for (const el of frm.elements) {\n        const input = el as HTMLInputElement;\n        if (input.name.length > 0) {\n          if (input.name.endsWith(selected)) {\n            selectedCache[input.name] = input;\n          } else {\n            if ((input.type !== \"radio\") || input.checked) {\n              editorCache[input.name] = input.value;\n            }\n            const evt = () => {\n              const cv = selectedCache[input.name + selected];\n              if (cv) {\n                cv.checked = editorCache[input.name] !== input.value;\n              }\n            };\n            input.onchange = evt;\n            input.onkeyup = evt;\n          }\n        }\n      }\n    }\n    frm.onreset = buildCache;\n    buildCache();\n  }\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nconst keys: string[] = []\n\nexport function themeInit() {\n  const x = document.querySelectorAll(\".color-var\");\n  if (x.length > 0) {\n    for (const el of Array.from(x)) {\n      const i = (el as HTMLInputElement)\n      const v = i.dataset[\"var\"] as string;\n      const m = i.dataset[\"mode\"] as string;\n      keys.push(v);\n      if (!v || v.length === 0) {\n        continue;\n      }\n      i.oninput = function () {\n        set(m, v, i.value);\n      }\n    }\n  }\n}\n\nfunction set(mode: string, key: string, v: string) {\n  const mockup = document.querySelector(\"#mockup-\" + mode);\n  if (!mockup) {\n    console.error(\"can't find mockup for mode [\" + mode + \"]\")\n    return;\n  }\n  switch (key) {\n    case \"color-foreground\":\n      setFG(mockup, \".mock-main\", v);\n      break;\n    case \"color-background\":\n      setBG(mockup, \".mock-main\", v);\n      break;\n    case \"color-foreground-muted\":\n      setFG(mockup, \".mock-main .mock-muted\", v);\n      break;\n    case \"color-background-muted\":\n      setBG(mockup, \".mock-main .mock-muted\", v);\n      break;\n    case \"color-link-foreground\":\n      setFG(mockup, \".mock-main .mock-link\", v);\n      break;\n    case \"color-link-visited-foreground\":\n      setFG(mockup, \".mock-main .mock-link-visited\", v);\n      break;\n    case \"color-nav-foreground\":\n      setFG(mockup, \".mock-nav\", v);\n      setFG(mockup, \".mock-nav .mock-link\", v);\n      break;\n    case \"color-nav-background\":\n      setBG(mockup, \".mock-nav\", v);\n      break;\n    case \"color-menu-foreground\":\n      setFG(mockup, \".mock-menu\", v);\n      setFG(mockup, \".mock-menu .mock-link\", v);\n      break;\n    case \"color-menu-background\":\n      setBG(mockup, \".mock-menu\", v);\n      break;\n    case \"color-menu-selected-foreground\":\n      setFG(mockup, \".mock-menu .mock-link-selected\", v);\n      break;\n    case \"color-menu-selected-background\":\n      setBG(mockup, \".mock-menu .mock-link-selected\", v);\n      break;\n    default:\n      console.error(\"invalid key [\" + key + \"]\")\n  }\n}\n\nfunction call(mockup: Element, sel: string, f: (el: HTMLElement) => void) {\n  const q = mockup.querySelectorAll(sel);\n  if (q.length == 0) {\n    throw \"empty query selector [\" + sel + \"]\"\n  }\n  q.forEach(x => {\n    f(x as HTMLElement);\n  })\n}\n\nfunction setBG(mockup: Element, sel: string, v: string) {\n  call(mockup, sel, el => el.style.backgroundColor = v);\n}\n\nfunction setFG(mockup: Element, sel: string, v: string) {\n  call(mockup, sel, el => el.style.color = v);\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nexport function socketInit() {\n  (window as any).pftest.Socket = Socket;\n}\n\nlet appUnloading = false;\n\ninterface Message {\n  readonly channel: string;\n  readonly cmd: string;\n  readonly param: any;\n}\n\nclass Socket {\n  readonly debug: boolean;\n  private readonly open: (id: string) => void;\n  private readonly recv: (m: Message) => void;\n  private readonly err: (svc: string, err: string) => void;\n  readonly url?: string;\n  connected: boolean;\n  pauseSeconds: number;\n  pendingMessages: Message[];\n  connectTime?: number\n  sock?: WebSocket;\n\n  constructor(debug: boolean, open: (id: string) => void, recv: (m: Message) => void, err: (svc: string, err: string) => void, url?: string) {\n    this.debug = debug\n    this.open = open;\n    this.recv = recv;\n    this.err = err;\n    this.url = socketUrl(url);\n    this.connected = false;\n    this.pauseSeconds = 1;\n    this.pendingMessages = [];\n\n    this.connect();\n  }\n\n  connect() {\n    this.connectTime = Date.now();\n    this.sock = new WebSocket(socketUrl(this.url));\n    const s = this;\n    this.sock.onopen = () => {\n      s.connected = true;\n      s.pendingMessages.forEach(s.send);\n      s.pendingMessages = [];\n      if (s.debug) {\n        console.log(\"WebSocket connected\")\n      }\n      s.open(\"todo\");\n    };\n    this.sock.onmessage = (event) => {\n      const msg = JSON.parse(event.data) as Message;\n      if (s.debug) {\n        console.debug(\"in\", msg);\n      }\n      s.recv(msg);\n    };\n    this.sock.onerror = (event) => () => {\n      s.err(\"socket\", event.type);\n    }\n    this.sock.onclose = () => {\n      s.connected = false;\n      const elapsed = s.connectTime ? Date.now() - s.connectTime : 0;\n\n      if (0 < elapsed && elapsed < 2000) {\n        s.pauseSeconds = s.pauseSeconds * 2;\n        if (s.debug) {\n          console.debug(`socket closed immediately, reconnecting in ${s.pauseSeconds} seconds`);\n        }\n        setTimeout(() => {\n          s.connect();\n        }, s.pauseSeconds * 1000);\n      } else {\n        console.debug(\"socket closed after [\" + elapsed + \"ms]\");\n        s.connect();\n      }\n    };\n  }\n\n  disconnect() {\n\n  }\n\n  send(msg: Message) {\n    if (this.debug) {\n      console.debug(\"out\", msg);\n    }\n    if (!this.sock) {\n      throw \"not initialized\";\n    }\n    if (this.connected) {\n      const m = JSON.stringify(msg, null, 2);\n      this.sock.send(m);\n    } else {\n      this.pendingMessages.push(msg);\n    }\n  }\n}\n\nfunction socketUrl(u?: string) {\n  if (!u) {\n    u = \"/connect\";\n  }\n  if (u.indexOf(\"ws\") == 0) {\n    return u\n  }\n  const l = document.location;\n  let protocol = \"ws\";\n  if (l.protocol === \"https:\") {\n    protocol = \"wss\";\n  }\n  if (u.indexOf(\"/\") != 0) {\n    u = \"/\" + u;\n  }\n  return protocol + `://${l.host}${u}`;\n}\n", "// $PF_IGNORE$\nexport function appInit(): void {\n\n}\n", "// Content managed by Project Forge, see [projectforge.md] for details.\nimport \"./client.css\"\nimport {menuInit} from \"./menu\";\nimport {modeInit} from \"./mode\";\nimport {flashInit} from \"./flash\";\nimport {linkInit} from \"./link\";\nimport {modalInit} from \"./modal\";\nimport {editorInit} from \"./editor\";\nimport {themeInit} from \"./theme\";\nimport {socketInit} from \"./socket\";\nimport {appInit} from \"./app\";\n\nexport function init(): void {\n  (window as any).pftest = {};\n  menuInit();\n  modeInit();\n  flashInit();\n  linkInit();\n  modalInit();\n  editorInit();\n  themeInit();\n  socketInit();\n  appInit();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", init);\n"],
  "mappings": "MACO,YAAoB,CACzB,OAAW,KAAK,OAAM,KAAK,SAAS,iBAAiB,2BACnD,EAAE,eAAe,CAAC,MAAO,YCF7B,GAAM,GAAI,aACJ,EAAI,YAEH,YAAoB,CACzB,OAAW,KAAM,OAAM,KAAK,SAAS,uBAAuB,eAAgB,CAC1E,GAAM,GAAK,EACX,EAAE,QAAU,UAAW,CACrB,OAAQ,EAAE,WACH,GACH,SAAS,KAAK,UAAU,OAAO,GAC/B,SAAS,KAAK,UAAU,OAAO,GAC/B,UACG,QACH,SAAS,KAAK,UAAU,IAAI,GAC5B,SAAS,KAAK,UAAU,OAAO,GAC/B,UACG,OACH,SAAS,KAAK,UAAU,OAAO,GAC/B,SAAS,KAAK,UAAU,IAAI,GAC5B,SCnBH,YAAqB,CAC1B,GAAM,GAAY,SAAS,eAAe,mBAC1C,GAAI,IAAc,KAChB,OAEF,GAAM,GAAI,EAAU,iBAAiB,UACrC,AAAI,EAAE,OAAS,GACb,WAAW,IAAM,CACf,OAAW,KAAK,GAAG,CACjB,GAAM,GAAK,EACX,EAAG,MAAM,QAAU,IACnB,WAAW,IAAM,EAAG,SAAU,OAE/B,KCbA,YAAoB,CACzB,OAAW,KAAK,OAAM,KAAK,SAAS,uBAAuB,iBAAkB,CAC3E,GAAM,GAAM,EACZ,EAAG,QAAU,UAAW,CACtB,GAAI,GAAM,EAAG,QAAQ,QACrB,MAAI,IAAO,EAAI,SAAW,GACxB,GAAM,iBAED,QAAQ,KCRd,YAAqB,CAC1B,SAAS,iBAAiB,UAAW,AAAC,GAAU,CAC9C,AAAI,EAAM,MAAQ,UACZ,SAAS,SAAS,KAAK,WAAW,YACpC,UAAS,SAAS,KAAO,MCJjC,GAAM,GAAW,aAEV,WAA0B,EAAiB,CAChD,GAAM,GAAI,EAAG,cAAe,cAAe,cAAc,SACzD,GAAI,CAAC,EACH,KAAM,4BAER,EAAE,MAAQ,SAGL,YAAsB,CAC3B,AAAC,OAAe,OAAO,iBAAmB,EAE1C,GAAI,GAA0C,GAC1C,EAAsD,GAC1D,OAAW,KAAK,OAAM,KAAK,SAAS,iBAAiB,YAAa,CAChE,GAAM,GAAM,EACN,EAAa,IAAM,CACvB,EAAc,GACd,EAAgB,GAChB,OAAW,KAAM,GAAI,SAAU,CAC7B,GAAM,GAAQ,EACd,GAAI,EAAM,KAAK,OAAS,EACtB,GAAI,EAAM,KAAK,SAAS,GACtB,EAAc,EAAM,MAAQ,MACvB,CACL,AAAK,GAAM,OAAS,SAAY,EAAM,UACpC,GAAY,EAAM,MAAQ,EAAM,OAElC,GAAM,GAAM,IAAM,CAChB,GAAM,GAAK,EAAc,EAAM,KAAO,GACtC,AAAI,GACF,GAAG,QAAU,EAAY,EAAM,QAAU,EAAM,QAGnD,EAAM,SAAW,EACjB,EAAM,QAAU,KAKxB,EAAI,QAAU,EACd,KC1CJ,GAAM,GAAiB,GAEhB,YAAqB,CAC1B,GAAM,GAAI,SAAS,iBAAiB,cACpC,GAAI,EAAE,OAAS,EACb,OAAW,KAAM,OAAM,KAAK,GAAI,CAC9B,GAAM,GAAK,EACL,EAAI,EAAE,QAAQ,IACd,EAAI,EAAE,QAAQ,KAEpB,AADA,EAAK,KAAK,GACN,GAAC,GAAK,EAAE,SAAW,IAGvB,GAAE,QAAU,UAAY,CACtB,EAAI,EAAG,EAAG,EAAE,UAMpB,WAAa,EAAc,EAAa,EAAW,CACjD,GAAM,GAAS,SAAS,cAAc,WAAa,GACnD,GAAI,CAAC,EAAQ,CACX,QAAQ,MAAM,+BAAiC,EAAO,KACtD,OAEF,OAAQ,OACD,mBACH,EAAM,EAAQ,aAAc,GAC5B,UACG,mBACH,EAAM,EAAQ,aAAc,GAC5B,UACG,yBACH,EAAM,EAAQ,yBAA0B,GACxC,UACG,yBACH,EAAM,EAAQ,yBAA0B,GACxC,UACG,wBACH,EAAM,EAAQ,wBAAyB,GACvC,UACG,gCACH,EAAM,EAAQ,gCAAiC,GAC/C,UACG,uBACH,EAAM,EAAQ,YAAa,GAC3B,EAAM,EAAQ,uBAAwB,GACtC,UACG,uBACH,EAAM,EAAQ,YAAa,GAC3B,UACG,wBACH,EAAM,EAAQ,aAAc,GAC5B,EAAM,EAAQ,wBAAyB,GACvC,UACG,wBACH,EAAM,EAAQ,aAAc,GAC5B,UACG,iCACH,EAAM,EAAQ,iCAAkC,GAChD,UACG,iCACH,EAAM,EAAQ,iCAAkC,GAChD,cAEA,QAAQ,MAAM,gBAAkB,EAAM,MAI5C,WAAc,EAAiB,EAAa,EAA8B,CACxE,GAAM,GAAI,EAAO,iBAAiB,GAClC,GAAI,EAAE,QAAU,EACd,KAAM,yBAA2B,EAAM,IAEzC,EAAE,QAAQ,GAAK,CACb,EAAE,KAIN,WAAe,EAAiB,EAAa,EAAW,CACtD,EAAK,EAAQ,EAAK,GAAM,EAAG,MAAM,gBAAkB,GAGrD,WAAe,EAAiB,EAAa,EAAW,CACtD,EAAK,EAAQ,EAAK,GAAM,EAAG,MAAM,MAAQ,GCrFpC,YAAsB,CAC3B,AAAC,OAAe,OAAO,OAAS,EAWlC,WAAa,CAYX,YAAY,EAAgB,EAA4B,EAA4B,EAAyC,EAAc,CACzI,KAAK,MAAQ,EACb,KAAK,KAAO,EACZ,KAAK,KAAO,EACZ,KAAK,IAAM,EACX,KAAK,IAAM,EAAU,GACrB,KAAK,UAAY,GACjB,KAAK,aAAe,EACpB,KAAK,gBAAkB,GAEvB,KAAK,UAGP,SAAU,CACR,KAAK,YAAc,KAAK,MACxB,KAAK,KAAO,GAAI,WAAU,EAAU,KAAK,MACzC,GAAM,GAAI,KACV,KAAK,KAAK,OAAS,IAAM,CACvB,EAAE,UAAY,GACd,EAAE,gBAAgB,QAAQ,EAAE,MAC5B,EAAE,gBAAkB,GAChB,EAAE,OACJ,QAAQ,IAAI,uBAEd,EAAE,KAAK,SAET,KAAK,KAAK,UAAY,AAAC,GAAU,CAC/B,GAAM,GAAM,KAAK,MAAM,EAAM,MAC7B,AAAI,EAAE,OACJ,QAAQ,MAAM,KAAM,GAEtB,EAAE,KAAK,IAET,KAAK,KAAK,QAAU,AAAC,GAAU,IAAM,CACnC,EAAE,IAAI,SAAU,EAAM,OAExB,KAAK,KAAK,QAAU,IAAM,CACxB,EAAE,UAAY,GACd,GAAM,GAAU,EAAE,YAAc,KAAK,MAAQ,EAAE,YAAc,EAE7D,AAAI,EAAI,GAAW,EAAU,IAC3B,GAAE,aAAe,EAAE,aAAe,EAC9B,EAAE,OACJ,QAAQ,MAAM,8CAA8C,EAAE,wBAEhE,WAAW,IAAM,CACf,EAAE,WACD,EAAE,aAAe,MAEpB,SAAQ,MAAM,wBAA0B,EAAU,OAClD,EAAE,YAKR,YAAa,EAIb,KAAK,EAAc,CAIjB,GAHI,KAAK,OACP,QAAQ,MAAM,MAAO,GAEnB,CAAC,KAAK,KACR,KAAM,kBAER,GAAI,KAAK,UAAW,CAClB,GAAM,GAAI,KAAK,UAAU,EAAK,KAAM,GACpC,KAAK,KAAK,KAAK,OAEf,MAAK,gBAAgB,KAAK,KAKhC,WAAmB,EAAY,CAI7B,GAHK,GACH,GAAI,YAEF,EAAE,QAAQ,OAAS,EACrB,MAAO,GAET,GAAM,GAAI,SAAS,SACf,EAAW,KACf,MAAI,GAAE,WAAa,UACjB,GAAW,OAET,EAAE,QAAQ,MAAQ,GACpB,GAAI,IAAM,GAEL,EAAW,MAAM,EAAE,OAAO,IClH5B,YAAyB,ECWzB,YAAsB,CAC3B,AAAC,OAAe,OAAS,GACzB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAGF,SAAS,iBAAiB,mBAAoB",
  "names": []
}
