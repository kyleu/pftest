(()=>{function f(){for(let n of Array.from(document.querySelectorAll(".menu-container .final")))n.scrollIntoView({block:"nearest"})}var l="mode-light",m="mode-dark";function k(){for(let n of Array.from(document.getElementsByClassName("mode-input"))){let e=n;e.onclick=function(){switch(e.value){case"":document.body.classList.remove(l),document.body.classList.remove(m);break;case"light":document.body.classList.add(l),document.body.classList.remove(m);break;case"dark":document.body.classList.remove(l),document.body.classList.add(m);break}}}}function g(){let n=document.getElementById("flash-container");if(n===null)return;let e=n.querySelectorAll(".flash");e.length>0&&setTimeout(()=>{for(let o of e){let t=o;t.style.opacity="0",setTimeout(()=>t.remove(),500)}},3e3)}function p(){for(let n of Array.from(document.getElementsByClassName("link-confirm"))){let e=n;e.onclick=function(){let o=e.dataset.message;return o&&o.length===0&&(o="Are you sure?"),confirm(o)}}}function h(){document.addEventListener("keydown",n=>{n.key==="Escape"&&document.location.hash.startsWith("#modal-")&&(document.location.hash="")})}var y="--selected";function L(n){let e=n.parentElement.parentElement.querySelector("input");if(!e)throw"no associated input found";e.value="\u2205"}function b(){window.pftest.setSiblingToNull=L;let n={},e={};for(let o of Array.from(document.querySelectorAll(".editor"))){let t=o,r=()=>{n={},e={};for(let a of t.elements){let s=a;if(s.name.length>0)if(s.name.endsWith(y))e[s.name]=s;else{(s.type!=="radio"||s.checked)&&(n[s.name]=s.value);let d=()=>{let u=e[s.name+y];u&&(u.checked=n[s.name]!==s.value)};s.onchange=d,s.onkeyup=d}}};t.onreset=r,r()}}var T=[];function v(){let n=document.querySelectorAll(".color-var");if(n.length>0)for(let e of Array.from(n)){let o=e,t=o.dataset.var,r=o.dataset.mode;T.push(t),!(!t||t.length===0)&&(o.oninput=function(){x(r,t,o.value)})}}function x(n,e,o){let t=document.querySelector("#mockup-"+n);if(!t){console.error("can't find mockup for mode ["+n+"]");return}switch(e){case"color-foreground":c(t,".mock-main",o);break;case"color-background":i(t,".mock-main",o);break;case"color-foreground-muted":c(t,".mock-main .mock-muted",o);break;case"color-background-muted":i(t,".mock-main .mock-muted",o);break;case"color-link-foreground":c(t,".mock-main .mock-link",o);break;case"color-link-visited-foreground":c(t,".mock-main .mock-link-visited",o);break;case"color-nav-foreground":c(t,".mock-nav",o),c(t,".mock-nav .mock-link",o);break;case"color-nav-background":i(t,".mock-nav",o);break;case"color-menu-foreground":c(t,".mock-menu",o),c(t,".mock-menu .mock-link",o);break;case"color-menu-background":i(t,".mock-menu",o);break;case"color-menu-selected-foreground":c(t,".mock-menu .mock-link-selected",o);break;case"color-menu-selected-background":i(t,".mock-menu .mock-link-selected",o);break;default:console.error("invalid key ["+e+"]")}}function I(n,e,o){let t=n.querySelectorAll(e);if(t.length==0)throw"empty query selector ["+e+"]";t.forEach(r=>{o(r)})}function i(n,e,o){I(n,e,t=>t.style.backgroundColor=o)}function c(n,e,o){I(n,e,t=>t.style.color=o)}function E(){window.pftest.Socket=M}var M=class{constructor(e,o,t,r,a){this.debug=e,this.open=o,this.recv=t,this.err=r,this.url=S(a),this.connected=!1,this.pauseSeconds=1,this.pendingMessages=[],this.connect()}connect(){this.connectTime=Date.now(),this.sock=new WebSocket(S(this.url));let e=this;this.sock.onopen=()=>{e.connected=!0,e.pendingMessages.forEach(e.send),e.pendingMessages=[],e.debug&&console.log("WebSocket connected"),e.open("todo")},this.sock.onmessage=o=>{let t=JSON.parse(o.data);e.debug&&console.debug("in",t),e.recv(t)},this.sock.onerror=o=>()=>{e.err("socket",o.type)},this.sock.onclose=()=>{e.connected=!1;let o=e.connectTime?Date.now()-e.connectTime:0;0<o&&o<2e3?(e.pauseSeconds=e.pauseSeconds*2,e.debug&&console.debug(`socket closed immediately, reconnecting in ${e.pauseSeconds} seconds`),setTimeout(()=>{e.connect()},e.pauseSeconds*1e3)):(console.debug("socket closed after ["+o+"ms]"),e.connect())}}disconnect(){}send(e){if(this.debug&&console.debug("out",e),!this.sock)throw"not initialized";if(this.connected){let o=JSON.stringify(e,null,2);this.sock.send(o)}else this.pendingMessages.push(e)}};function S(n){if(n||(n="/connect"),n.indexOf("ws")==0)return n;let e=document.location,o="ws";return e.protocol==="https:"&&(o="wss"),n.indexOf("/")!=0&&(n="/"+n),o+`://${e.host}${n}`}function w(){}function A(){window.pftest={},f(),k(),g(),p(),h(),b(),v(),E(),w()}document.addEventListener("DOMContentLoaded",A);})();
//# sourceMappingURL=client.js.map
