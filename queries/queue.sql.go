// Code generated by qtc from "queue.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// -- Content managed by Project Forge, see [projectforge.md] for details.
// --

//line queries/queue.sql:2
package queries

//line queries/queue.sql:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/queue.sql:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/queue.sql:2
func StreamQueueCreateTable(qw422016 *qt422016.Writer, table string) {
//line queries/queue.sql:2
	qw422016.N().S(`
create table "`)
//line queries/queue.sql:3
	qw422016.E().S(table)
//line queries/queue.sql:3
	qw422016.N().S(`" (
  id text primary key,
  topic text not null,
  param text not null,
  retries integer not null default 0,
  max_age text not null default (strftime('%Y-%m-%dT%H:%M:%fZ')),
  created text not null default (strftime('%Y-%m-%dT%H:%M:%fZ')),
  updated text not null default (strftime('%Y-%m-%dT%H:%M:%fZ'))
) strict;

create trigger `)
//line queries/queue.sql:13
	qw422016.E().S(table)
//line queries/queue.sql:13
	qw422016.N().S(`_updated_timestamp after update on `)
//line queries/queue.sql:13
	qw422016.E().S(table)
//line queries/queue.sql:13
	qw422016.N().S(` begin
    update `)
//line queries/queue.sql:14
	qw422016.E().S(table)
//line queries/queue.sql:14
	qw422016.N().S(` set updated = strftime('%Y-%m-%dT%H:%M:%fZ') where id = old.id;
end;

create index `)
//line queries/queue.sql:17
	qw422016.E().S(table)
//line queries/queue.sql:17
	qw422016.N().S(`_topic_created_idx on `)
//line queries/queue.sql:17
	qw422016.E().S(table)
//line queries/queue.sql:17
	qw422016.N().S(` (topic, created);
-- `)
//line queries/queue.sql:18
}

//line queries/queue.sql:18
func WriteQueueCreateTable(qq422016 qtio422016.Writer, table string) {
//line queries/queue.sql:18
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/queue.sql:18
	StreamQueueCreateTable(qw422016, table)
//line queries/queue.sql:18
	qt422016.ReleaseWriter(qw422016)
//line queries/queue.sql:18
}

//line queries/queue.sql:18
func QueueCreateTable(table string) string {
//line queries/queue.sql:18
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/queue.sql:18
	WriteQueueCreateTable(qb422016, table)
//line queries/queue.sql:18
	qs422016 := string(qb422016.B)
//line queries/queue.sql:18
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/queue.sql:18
	return qs422016
//line queries/queue.sql:18
}

// --

//line queries/queue.sql:20
func StreamQueueCount(qw422016 *qt422016.Writer, table string) {
//line queries/queue.sql:20
	qw422016.N().S(`
select count(*) as "x" from "`)
//line queries/queue.sql:21
	qw422016.E().S(table)
//line queries/queue.sql:21
	qw422016.N().S(`" where "topic" = $1;
-- `)
//line queries/queue.sql:22
}

//line queries/queue.sql:22
func WriteQueueCount(qq422016 qtio422016.Writer, table string) {
//line queries/queue.sql:22
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/queue.sql:22
	StreamQueueCount(qw422016, table)
//line queries/queue.sql:22
	qt422016.ReleaseWriter(qw422016)
//line queries/queue.sql:22
}

//line queries/queue.sql:22
func QueueCount(table string) string {
//line queries/queue.sql:22
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/queue.sql:22
	WriteQueueCount(qb422016, table)
//line queries/queue.sql:22
	qs422016 := string(qb422016.B)
//line queries/queue.sql:22
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/queue.sql:22
	return qs422016
//line queries/queue.sql:22
}

// --

//line queries/queue.sql:24
func StreamQueueRead(qw422016 *qt422016.Writer, table string) {
//line queries/queue.sql:24
	qw422016.N().S(`
update `)
//line queries/queue.sql:25
	qw422016.E().S(table)
//line queries/queue.sql:25
	qw422016.N().S(` set "max_age" = $1, "retries" = "retries" + 1 where "id" = (
  select "id" from "`)
//line queries/queue.sql:26
	qw422016.E().S(table)
//line queries/queue.sql:26
	qw422016.N().S(`" where "topic" = $2 and "max_age" < $3 and "retries" < $4 order by "created" limit 1
) returning "id", "topic", "param", "retries";
-- `)
//line queries/queue.sql:28
}

//line queries/queue.sql:28
func WriteQueueRead(qq422016 qtio422016.Writer, table string) {
//line queries/queue.sql:28
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/queue.sql:28
	StreamQueueRead(qw422016, table)
//line queries/queue.sql:28
	qt422016.ReleaseWriter(qw422016)
//line queries/queue.sql:28
}

//line queries/queue.sql:28
func QueueRead(table string) string {
//line queries/queue.sql:28
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/queue.sql:28
	WriteQueueRead(qb422016, table)
//line queries/queue.sql:28
	qs422016 := string(qb422016.B)
//line queries/queue.sql:28
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/queue.sql:28
	return qs422016
//line queries/queue.sql:28
}

// --

//line queries/queue.sql:30
func StreamQueueWrite(qw422016 *qt422016.Writer, table string) {
//line queries/queue.sql:30
	qw422016.N().S(`
insert into "`)
//line queries/queue.sql:31
	qw422016.E().S(table)
//line queries/queue.sql:31
	qw422016.N().S(`" ("id", "topic", "param") values ($1, $2, $3);
-- `)
//line queries/queue.sql:32
}

//line queries/queue.sql:32
func WriteQueueWrite(qq422016 qtio422016.Writer, table string) {
//line queries/queue.sql:32
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/queue.sql:32
	StreamQueueWrite(qw422016, table)
//line queries/queue.sql:32
	qt422016.ReleaseWriter(qw422016)
//line queries/queue.sql:32
}

//line queries/queue.sql:32
func QueueWrite(table string) string {
//line queries/queue.sql:32
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/queue.sql:32
	WriteQueueWrite(qb422016, table)
//line queries/queue.sql:32
	qs422016 := string(qb422016.B)
//line queries/queue.sql:32
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/queue.sql:32
	return qs422016
//line queries/queue.sql:32
}

// --

//line queries/queue.sql:34
func StreamQueueDelete(qw422016 *qt422016.Writer, table string) {
//line queries/queue.sql:34
	qw422016.N().S(`
delete from "`)
//line queries/queue.sql:35
	qw422016.E().S(table)
//line queries/queue.sql:35
	qw422016.N().S(`" where "id" = $1;
-- `)
//line queries/queue.sql:36
}

//line queries/queue.sql:36
func WriteQueueDelete(qq422016 qtio422016.Writer, table string) {
//line queries/queue.sql:36
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/queue.sql:36
	StreamQueueDelete(qw422016, table)
//line queries/queue.sql:36
	qt422016.ReleaseWriter(qw422016)
//line queries/queue.sql:36
}

//line queries/queue.sql:36
func QueueDelete(table string) string {
//line queries/queue.sql:36
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/queue.sql:36
	WriteQueueDelete(qb422016, table)
//line queries/queue.sql:36
	qs422016 := string(qb422016.B)
//line queries/queue.sql:36
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/queue.sql:36
	return qs422016
//line queries/queue.sql:36
}
