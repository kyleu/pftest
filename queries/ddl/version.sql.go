// Code generated by qtc from "version.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// -- Content managed by Project Forge, see [projectforge.md] for details.
// --

//line queries/ddl/version.sql:2
package ddl

//line queries/ddl/version.sql:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/ddl/version.sql:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/ddl/version.sql:2
func StreamVersionDrop(qw422016 *qt422016.Writer) {
//line queries/ddl/version.sql:2
	qw422016.N().S(`
drop table if exists "version_revision";
drop table if exists "version";
-- `)
//line queries/ddl/version.sql:5
}

//line queries/ddl/version.sql:5
func WriteVersionDrop(qq422016 qtio422016.Writer) {
//line queries/ddl/version.sql:5
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/version.sql:5
	StreamVersionDrop(qw422016)
//line queries/ddl/version.sql:5
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/version.sql:5
}

//line queries/ddl/version.sql:5
func VersionDrop() string {
//line queries/ddl/version.sql:5
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/version.sql:5
	WriteVersionDrop(qb422016)
//line queries/ddl/version.sql:5
	qs422016 := string(qb422016.B)
//line queries/ddl/version.sql:5
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/version.sql:5
	return qs422016
//line queries/ddl/version.sql:5
}

// --

//line queries/ddl/version.sql:7
func StreamVersionCreate(qw422016 *qt422016.Writer) {
//line queries/ddl/version.sql:7
	qw422016.N().S(`
create table if not exists "version" (
  "id" text not null,
  "current_revision" int not null default 1,
  "constcol" text not null,
  "updated" timestamp default now(),
  primary key ("id")
);

create table if not exists "version_revision" (
  "version_id" text not null,
  "revision" int not null default 1,
  "varcol" jsonb not null,
  "created" timestamp not null default now(),
  foreign key ("version_id") references "version" ("id"),
  primary key ("version_id", "revision")
);

create index if not exists "version_revision__version_id_idx" on "version_revision" ("version_id");
-- `)
//line queries/ddl/version.sql:26
}

//line queries/ddl/version.sql:26
func WriteVersionCreate(qq422016 qtio422016.Writer) {
//line queries/ddl/version.sql:26
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/version.sql:26
	StreamVersionCreate(qw422016)
//line queries/ddl/version.sql:26
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/version.sql:26
}

//line queries/ddl/version.sql:26
func VersionCreate() string {
//line queries/ddl/version.sql:26
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/version.sql:26
	WriteVersionCreate(qb422016)
//line queries/ddl/version.sql:26
	qs422016 := string(qb422016.B)
//line queries/ddl/version.sql:26
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/version.sql:26
	return qs422016
//line queries/ddl/version.sql:26
}
