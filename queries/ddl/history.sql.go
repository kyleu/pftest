// Code generated by qtc from "history.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// -- Content managed by Project Forge, see [projectforge.md] for details.
// --

//line queries/ddl/history.sql:2
package ddl

//line queries/ddl/history.sql:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/ddl/history.sql:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/ddl/history.sql:2
func StreamHistoryDrop(qw422016 *qt422016.Writer) {
//line queries/ddl/history.sql:2
	qw422016.N().S(`
drop table if exists "history_history";
drop table if exists "history";
-- `)
//line queries/ddl/history.sql:5
}

//line queries/ddl/history.sql:5
func WriteHistoryDrop(qq422016 qtio422016.Writer) {
//line queries/ddl/history.sql:5
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/history.sql:5
	StreamHistoryDrop(qw422016)
//line queries/ddl/history.sql:5
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/history.sql:5
}

//line queries/ddl/history.sql:5
func HistoryDrop() string {
//line queries/ddl/history.sql:5
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/history.sql:5
	WriteHistoryDrop(qb422016)
//line queries/ddl/history.sql:5
	qs422016 := string(qb422016.B)
//line queries/ddl/history.sql:5
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/history.sql:5
	return qs422016
//line queries/ddl/history.sql:5
}

// --

//line queries/ddl/history.sql:7
func StreamHistoryCreate(qw422016 *qt422016.Writer) {
//line queries/ddl/history.sql:7
	qw422016.N().S(`
create table if not exists "history" (
  "id" text not null,
  "data" jsonb not null,
  "created" timestamp not null default now(),
  "updated" timestamp default now(),
  primary key ("id")
);

create table if not exists "history_history" (
  "id" uuid,
  "history_id" text not null,
  "o" jsonb not null,
  "n" jsonb not null,
  "c" jsonb not null,
  "created" timestamp not null default now(),
  foreign key ("history_id") references "history" ("id"),
  primary key ("id")
);
-- `)
//line queries/ddl/history.sql:26
}

//line queries/ddl/history.sql:26
func WriteHistoryCreate(qq422016 qtio422016.Writer) {
//line queries/ddl/history.sql:26
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/history.sql:26
	StreamHistoryCreate(qw422016)
//line queries/ddl/history.sql:26
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/history.sql:26
}

//line queries/ddl/history.sql:26
func HistoryCreate() string {
//line queries/ddl/history.sql:26
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/history.sql:26
	WriteHistoryCreate(qb422016)
//line queries/ddl/history.sql:26
	qs422016 := string(qb422016.B)
//line queries/ddl/history.sql:26
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/history.sql:26
	return qs422016
//line queries/ddl/history.sql:26
}
