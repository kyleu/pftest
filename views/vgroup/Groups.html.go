// Code generated by qtc from "Groups.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Content managed by Project Forge, see [projectforge.md] for details. -->

//line views/vgroup/Groups.html:2
package vgroup

//line views/vgroup/Groups.html:2
import (
	"github.com/kyleu/pftest/app"
	"github.com/kyleu/pftest/app/controller/cutil"
	"github.com/kyleu/pftest/app/util"
	"github.com/kyleu/pftest/views/components"
	"github.com/kyleu/pftest/views/layout"
)

//line views/vgroup/Groups.html:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vgroup/Groups.html:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vgroup/Groups.html:10
type Groups struct {
	layout.Basic
	Groups []*util.KeyValInt
}

//line views/vgroup/Groups.html:15
func (p *Groups) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vgroup/Groups.html:15
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vgroup/Groups.html:17
	components.StreamSVGRefIcon(qw422016, `star`, ps)
//line views/vgroup/Groups.html:17
	qw422016.N().S(` Group Groups</h3>
    <div class="mt">
`)
//line views/vgroup/Groups.html:19
	if len(p.Groups) == 0 {
//line views/vgroup/Groups.html:19
		qw422016.N().S(`      <em>No groups available</em>
`)
//line views/vgroup/Groups.html:21
	} else {
//line views/vgroup/Groups.html:21
		qw422016.N().S(`      <table>
        <thead>
          <tr>
            <th>Group</th>
            <th>Group Count</th>
          </tr>
        </thead>
        <tbody>
`)
//line views/vgroup/Groups.html:30
		for _, x := range p.Groups {
//line views/vgroup/Groups.html:30
			qw422016.N().S(`          <tr>
            <td><a href="/group/group/`)
//line views/vgroup/Groups.html:32
			qw422016.E().S(x.Key)
//line views/vgroup/Groups.html:32
			qw422016.N().S(`">`)
//line views/vgroup/Groups.html:32
			qw422016.E().S(x.Key)
//line views/vgroup/Groups.html:32
			qw422016.N().S(`</a></td>
            <td>`)
//line views/vgroup/Groups.html:33
			qw422016.N().D(x.Count)
//line views/vgroup/Groups.html:33
			qw422016.N().S(`</td>
          </tr>
`)
//line views/vgroup/Groups.html:35
		}
//line views/vgroup/Groups.html:35
		qw422016.N().S(`        </tbody>
      </table>
`)
//line views/vgroup/Groups.html:38
	}
//line views/vgroup/Groups.html:38
	qw422016.N().S(`    </div>
  </div>
`)
//line views/vgroup/Groups.html:41
}

//line views/vgroup/Groups.html:41
func (p *Groups) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vgroup/Groups.html:41
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vgroup/Groups.html:41
	p.StreamBody(qw422016, as, ps)
//line views/vgroup/Groups.html:41
	qt422016.ReleaseWriter(qw422016)
//line views/vgroup/Groups.html:41
}

//line views/vgroup/Groups.html:41
func (p *Groups) Body(as *app.State, ps *cutil.PageState) string {
//line views/vgroup/Groups.html:41
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vgroup/Groups.html:41
	p.WriteBody(qb422016, as, ps)
//line views/vgroup/Groups.html:41
	qs422016 := string(qb422016.B)
//line views/vgroup/Groups.html:41
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vgroup/Groups.html:41
	return qs422016
//line views/vgroup/Groups.html:41
}
