// Code generated by qtc from "Authentication.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vauth/Authentication.html:1
package vauth

//line views/vauth/Authentication.html:1
import (
	"github.com/kyleu/pftest/app"
	"github.com/kyleu/pftest/app/controller/cutil"
	"github.com/kyleu/pftest/app/lib/auth"
	"github.com/kyleu/pftest/views/components"
)

//line views/vauth/Authentication.html:8
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vauth/Authentication.html:8
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vauth/Authentication.html:8
func StreamAuthentication(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vauth/Authentication.html:8
	qw422016.N().S(`
`)
//line views/vauth/Authentication.html:10
	prvs, err := as.Auth.Providers(ps.Logger)
	if err != nil {
		panic(err)
	}

//line views/vauth/Authentication.html:14
	qw422016.N().S(`  <div class="card">
    <div class="right"><a href="#modal-available"><button type="button">Available</button></a></div>
    <h3>`)
//line views/vauth/Authentication.html:17
	components.StreamSVGIcon(qw422016, `profile`, ps)
//line views/vauth/Authentication.html:17
	qw422016.N().S(` Authentication</h3>
`)
//line views/vauth/Authentication.html:18
	if len(prvs) == 0 {
//line views/vauth/Authentication.html:18
		qw422016.N().S(`    <em class="mt">no authentication providers configured, why not <a href="#modal-available">add one</a>?</em>
`)
//line views/vauth/Authentication.html:20
	} else {
//line views/vauth/Authentication.html:20
		qw422016.N().S(`    <table class="mt">
`)
//line views/vauth/Authentication.html:22
		for _, prv := range prvs {
//line views/vauth/Authentication.html:22
			qw422016.N().S(`      <tr><td><a href="/auth/`)
//line views/vauth/Authentication.html:23
			qw422016.N().U(prv.ID)
//line views/vauth/Authentication.html:23
			qw422016.N().S(`?refer=`)
//line views/vauth/Authentication.html:23
			qw422016.N().U(`/admin`)
//line views/vauth/Authentication.html:23
			qw422016.N().S(`">`)
//line views/vauth/Authentication.html:23
			qw422016.E().S(auth.AvailableProviderNames[prv.ID])
//line views/vauth/Authentication.html:23
			qw422016.N().S(`</a></td></tr>
`)
//line views/vauth/Authentication.html:24
		}
//line views/vauth/Authentication.html:24
		qw422016.N().S(`    </table>
`)
//line views/vauth/Authentication.html:26
	}
//line views/vauth/Authentication.html:26
	qw422016.N().S(`  </div>

  <div id="modal-available" class="modal" style="display: none;">
    <a class="backdrop" href="#"></a>
    <div class="modal-content">
      <div class="modal-header">
        <a href="#" class="modal-close">Ã—</a>
        <h2>Available Authentication Providers</h2>
      </div>
      <div class="modal-body">
        <table>
`)
//line views/vauth/Authentication.html:38
	for _, x := range auth.AvailableProviderKeys {
//line views/vauth/Authentication.html:38
		qw422016.N().S(`          <tr>
`)
//line views/vauth/Authentication.html:40
		if prvs.Contains(x) {
//line views/vauth/Authentication.html:40
			qw422016.N().S(`            <td class="nowrap"><em>`)
//line views/vauth/Authentication.html:41
			qw422016.E().S(auth.AvailableProviderNames[x])
//line views/vauth/Authentication.html:41
			qw422016.N().S(`</em></td>
            <td><em>`)
//line views/vauth/Authentication.html:42
			qw422016.E().S(auth.ProviderUsage(x, prvs.Contains(x)))
//line views/vauth/Authentication.html:42
			qw422016.N().S(`</em></td>
`)
//line views/vauth/Authentication.html:43
		} else {
//line views/vauth/Authentication.html:43
			qw422016.N().S(`            <td class="nowrap">`)
//line views/vauth/Authentication.html:44
			qw422016.E().S(auth.AvailableProviderNames[x])
//line views/vauth/Authentication.html:44
			qw422016.N().S(`</td>
            <td>`)
//line views/vauth/Authentication.html:45
			qw422016.E().S(auth.ProviderUsage(x, prvs.Contains(x)))
//line views/vauth/Authentication.html:45
			qw422016.N().S(`</td>
`)
//line views/vauth/Authentication.html:46
		}
//line views/vauth/Authentication.html:46
		qw422016.N().S(`          </tr>
`)
//line views/vauth/Authentication.html:48
	}
//line views/vauth/Authentication.html:48
	qw422016.N().S(`        </table>
      </div>
    </div>
  </div>
`)
//line views/vauth/Authentication.html:53
}

//line views/vauth/Authentication.html:53
func WriteAuthentication(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vauth/Authentication.html:53
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vauth/Authentication.html:53
	StreamAuthentication(qw422016, as, ps)
//line views/vauth/Authentication.html:53
	qt422016.ReleaseWriter(qw422016)
//line views/vauth/Authentication.html:53
}

//line views/vauth/Authentication.html:53
func Authentication(as *app.State, ps *cutil.PageState) string {
//line views/vauth/Authentication.html:53
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vauth/Authentication.html:53
	WriteAuthentication(qb422016, as, ps)
//line views/vauth/Authentication.html:53
	qs422016 := string(qb422016.B)
//line views/vauth/Authentication.html:53
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vauth/Authentication.html:53
	return qs422016
//line views/vauth/Authentication.html:53
}
