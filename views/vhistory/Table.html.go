// Code generated by qtc from "Table.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Content managed by Project Forge, see [projectforge.md] for details. -->

//line views/vhistory/Table.html:2
package vhistory

//line views/vhistory/Table.html:2
import (
	"github.com/kyleu/pftest/app"
	"github.com/kyleu/pftest/app/controller/cutil"
	"github.com/kyleu/pftest/app/history"
	"github.com/kyleu/pftest/app/lib/filter"
	"github.com/kyleu/pftest/views/components"
)

//line views/vhistory/Table.html:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vhistory/Table.html:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vhistory/Table.html:10
func StreamTable(qw422016 *qt422016.Writer, models history.Histories, params filter.ParamSet, as *app.State, ps *cutil.PageState) {
//line views/vhistory/Table.html:10
	qw422016.N().S(`
`)
//line views/vhistory/Table.html:11
	prms := params.Get("history", nil, ps.Logger).Sanitize("history")

//line views/vhistory/Table.html:11
	qw422016.N().S(`  <table class="mt">
    <thead>
      <tr>
        `)
//line views/vhistory/Table.html:15
	components.StreamTableHeaderSimple(qw422016, "history", "id", "ID", "String text", prms, ps.URI, ps)
//line views/vhistory/Table.html:15
	qw422016.N().S(`
        `)
//line views/vhistory/Table.html:16
	components.StreamTableHeaderSimple(qw422016, "history", "data", "Data", "JSON object", prms, ps.URI, ps)
//line views/vhistory/Table.html:16
	qw422016.N().S(`
        `)
//line views/vhistory/Table.html:17
	components.StreamTableHeaderSimple(qw422016, "history", "created", "Created", "Date and time, in almost any format", prms, ps.URI, ps)
//line views/vhistory/Table.html:17
	qw422016.N().S(`
        `)
//line views/vhistory/Table.html:18
	components.StreamTableHeaderSimple(qw422016, "history", "updated", "Updated", "Date and time, in almost any format (optional)", prms, ps.URI, ps)
//line views/vhistory/Table.html:18
	qw422016.N().S(`
      </tr>
    </thead>
    <tbody>
`)
//line views/vhistory/Table.html:22
	for _, model := range models {
//line views/vhistory/Table.html:22
		qw422016.N().S(`      <tr>
        <td><a href="/history/`)
//line views/vhistory/Table.html:24
		qw422016.E().S(model.ID)
//line views/vhistory/Table.html:24
		qw422016.N().S(`">`)
//line views/vhistory/Table.html:24
		qw422016.E().S(model.ID)
//line views/vhistory/Table.html:24
		qw422016.N().S(`</a></td>
        <td>`)
//line views/vhistory/Table.html:25
		components.StreamJSON(qw422016, model.Data)
//line views/vhistory/Table.html:25
		qw422016.N().S(`</td>
        <td>`)
//line views/vhistory/Table.html:26
		components.StreamDisplayTimestamp(qw422016, &model.Created)
//line views/vhistory/Table.html:26
		qw422016.N().S(`</td>
        <td>`)
//line views/vhistory/Table.html:27
		components.StreamDisplayTimestamp(qw422016, model.Updated)
//line views/vhistory/Table.html:27
		qw422016.N().S(`</td>
      </tr>
`)
//line views/vhistory/Table.html:29
	}
//line views/vhistory/Table.html:30
	if prms.HasNextPage(len(models)+prms.Offset) || prms.HasPreviousPage() {
//line views/vhistory/Table.html:30
		qw422016.N().S(`      <tr>
        <td colspan="4">`)
//line views/vhistory/Table.html:32
		components.StreamPagination(qw422016, len(models)+prms.Offset, prms, ps.URI)
//line views/vhistory/Table.html:32
		qw422016.N().S(`</td>
      </tr>
`)
//line views/vhistory/Table.html:34
	}
//line views/vhistory/Table.html:34
	qw422016.N().S(`    </tbody>
  </table>
`)
//line views/vhistory/Table.html:37
}

//line views/vhistory/Table.html:37
func WriteTable(qq422016 qtio422016.Writer, models history.Histories, params filter.ParamSet, as *app.State, ps *cutil.PageState) {
//line views/vhistory/Table.html:37
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vhistory/Table.html:37
	StreamTable(qw422016, models, params, as, ps)
//line views/vhistory/Table.html:37
	qt422016.ReleaseWriter(qw422016)
//line views/vhistory/Table.html:37
}

//line views/vhistory/Table.html:37
func Table(models history.Histories, params filter.ParamSet, as *app.State, ps *cutil.PageState) string {
//line views/vhistory/Table.html:37
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vhistory/Table.html:37
	WriteTable(qb422016, models, params, as, ps)
//line views/vhistory/Table.html:37
	qs422016 := string(qb422016.B)
//line views/vhistory/Table.html:37
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vhistory/Table.html:37
	return qs422016
//line views/vhistory/Table.html:37
}
