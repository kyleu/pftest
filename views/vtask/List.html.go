// Code generated by qtc from "List.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vtask/List.html:1
package vtask

//line views/vtask/List.html:1
import (
	"github.com/kyleu/pftest/app"
	"github.com/kyleu/pftest/app/controller/cutil"
	"github.com/kyleu/pftest/app/lib/task"
	"github.com/kyleu/pftest/views/components"
	"github.com/kyleu/pftest/views/layout"
)

//line views/vtask/List.html:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vtask/List.html:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vtask/List.html:9
type List struct {
	layout.Basic
	Tasks task.Tasks
}

//line views/vtask/List.html:14
func (p *List) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vtask/List.html:14
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vtask/List.html:16
	components.StreamSVGIcon(qw422016, `task`, ps)
//line views/vtask/List.html:16
	qw422016.N().S(` Registered Tasks</h3>
    <div class="overflow full-width">
      <table class="mt expanded">
        <thead>
          <tr>
            <th></th>
            <th>Key</th>
            <th>Title</th>
          </tr>
        </thead>
        <tbody>
`)
//line views/vtask/List.html:27
	if len(p.Tasks) == 0 {
//line views/vtask/List.html:27
		qw422016.N().S(`          <tr>
            <td colspan="3"><em>no tasks available</em></td>
          </tr>
`)
//line views/vtask/List.html:31
	}
//line views/vtask/List.html:32
	for _, t := range p.Tasks {
//line views/vtask/List.html:32
		qw422016.N().S(`          <tr>
            <td class="shrink"><a href="`)
//line views/vtask/List.html:34
		qw422016.E().S(t.WebPath())
//line views/vtask/List.html:34
		qw422016.N().S(`">`)
//line views/vtask/List.html:34
		components.StreamSVGInline(qw422016, t.IconSafe(), 16, ps)
//line views/vtask/List.html:34
		qw422016.N().S(`</a></td>
            <td class="shrink"><a href="`)
//line views/vtask/List.html:35
		qw422016.E().S(t.WebPath())
//line views/vtask/List.html:35
		qw422016.N().S(`">`)
//line views/vtask/List.html:35
		qw422016.E().S(t.Key)
//line views/vtask/List.html:35
		qw422016.N().S(`</a></td>
            <td>`)
//line views/vtask/List.html:36
		qw422016.E().S(t.TitleSafe())
//line views/vtask/List.html:36
		qw422016.N().S(`</td>
          </tr>
`)
//line views/vtask/List.html:38
	}
//line views/vtask/List.html:38
	qw422016.N().S(`        </tbody>
      </table>
    </div>
  </div>
`)
//line views/vtask/List.html:43
}

//line views/vtask/List.html:43
func (p *List) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vtask/List.html:43
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vtask/List.html:43
	p.StreamBody(qw422016, as, ps)
//line views/vtask/List.html:43
	qt422016.ReleaseWriter(qw422016)
//line views/vtask/List.html:43
}

//line views/vtask/List.html:43
func (p *List) Body(as *app.State, ps *cutil.PageState) string {
//line views/vtask/List.html:43
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vtask/List.html:43
	p.WriteBody(qb422016, as, ps)
//line views/vtask/List.html:43
	qs422016 := string(qb422016.B)
//line views/vtask/List.html:43
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vtask/List.html:43
	return qs422016
//line views/vtask/List.html:43
}
