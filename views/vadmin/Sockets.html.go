// Code generated by qtc from "Sockets.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Content managed by Project Forge, see [projectforge.md] for details. -->

//line views/vadmin/Sockets.html:2
package vadmin

//line views/vadmin/Sockets.html:2
import (
	"strings"

	"github.com/google/uuid"

	"github.com/kyleu/pftest/app"
	"github.com/kyleu/pftest/app/controller/cutil"
	"github.com/kyleu/pftest/app/lib/websocket"
	"github.com/kyleu/pftest/views/components"
	"github.com/kyleu/pftest/views/layout"
)

//line views/vadmin/Sockets.html:14
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vadmin/Sockets.html:14
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vadmin/Sockets.html:14
type Sockets struct {
	layout.Basic
	Channels    []string
	Connections []*websocket.Connection
	Taps        []uuid.UUID
}

//line views/vadmin/Sockets.html:21
func (p *Sockets) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:21
	qw422016.N().S(`
  <div class="card">
    <div class="right"><a href="/admin/sockets/tap"><button>Tap Traffic</button></a></div>
    <h3>Activity Taps</h3>
    <div class="mt">
`)
//line views/vadmin/Sockets.html:26
	if len(p.Taps) == 0 {
//line views/vadmin/Sockets.html:26
		qw422016.N().S(`      <em>no active taps</em>
`)
//line views/vadmin/Sockets.html:28
	} else {
//line views/vadmin/Sockets.html:28
		qw422016.N().S(`      <ul>
`)
//line views/vadmin/Sockets.html:30
		for _, x := range p.Taps {
//line views/vadmin/Sockets.html:30
			qw422016.N().S(`        <li>`)
//line views/vadmin/Sockets.html:31
			qw422016.E().S(x.String())
//line views/vadmin/Sockets.html:31
			qw422016.N().S(`</li>
`)
//line views/vadmin/Sockets.html:32
		}
//line views/vadmin/Sockets.html:32
		qw422016.N().S(`      </ul>
`)
//line views/vadmin/Sockets.html:34
	}
//line views/vadmin/Sockets.html:34
	qw422016.N().S(`    </div>
  </div>
  <div class="card">
    <h3>Channels</h3>
    <div class="mt">
`)
//line views/vadmin/Sockets.html:40
	if len(p.Channels) == 0 {
//line views/vadmin/Sockets.html:40
		qw422016.N().S(`      <em>no active channels</em>
`)
//line views/vadmin/Sockets.html:42
	} else {
//line views/vadmin/Sockets.html:42
		qw422016.N().S(`      <ul>
`)
//line views/vadmin/Sockets.html:44
		for _, x := range p.Channels {
//line views/vadmin/Sockets.html:44
			qw422016.N().S(`        <li><a href="/admin/sockets/chan/`)
//line views/vadmin/Sockets.html:45
			qw422016.E().S(x)
//line views/vadmin/Sockets.html:45
			qw422016.N().S(`">`)
//line views/vadmin/Sockets.html:45
			qw422016.E().S(x)
//line views/vadmin/Sockets.html:45
			qw422016.N().S(`</a></li>
`)
//line views/vadmin/Sockets.html:46
		}
//line views/vadmin/Sockets.html:46
		qw422016.N().S(`      </ul>
`)
//line views/vadmin/Sockets.html:48
	}
//line views/vadmin/Sockets.html:48
	qw422016.N().S(`    </div>
  </div>
  <div class="card">
    <h3>Active Connections</h3>
    <div class="mt">
`)
//line views/vadmin/Sockets.html:54
	if len(p.Connections) == 0 {
//line views/vadmin/Sockets.html:54
		qw422016.N().S(`      <em>no active connections</em>
`)
//line views/vadmin/Sockets.html:56
	} else {
//line views/vadmin/Sockets.html:56
		qw422016.N().S(`      <div class="overflow full-width">
        <table class="expanded">
          <thead>
            <tr>
              <th class="shrink">ID</th>
              <th>User ID</th>
              <th>Profile Name</th>
              <th>Service</th>
              <th>Channels</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
`)
//line views/vadmin/Sockets.html:70
		for _, x := range p.Connections {
//line views/vadmin/Sockets.html:70
			qw422016.N().S(`            <tr>
              <td class="shrink"><a href="/admin/sockets/conn/`)
//line views/vadmin/Sockets.html:72
			qw422016.E().S(x.ID.String())
//line views/vadmin/Sockets.html:72
			qw422016.N().S(`">`)
//line views/vadmin/Sockets.html:72
			qw422016.E().S(x.ID.String())
//line views/vadmin/Sockets.html:72
			qw422016.N().S(`</a></td>
              <td><a href="/admin/db/user/`)
//line views/vadmin/Sockets.html:73
			qw422016.E().S(x.Profile.ID.String())
//line views/vadmin/Sockets.html:73
			qw422016.N().S(`">`)
//line views/vadmin/Sockets.html:73
			qw422016.E().S(x.Profile.ID.String())
//line views/vadmin/Sockets.html:73
			qw422016.N().S(`</a></td>
              <td>`)
//line views/vadmin/Sockets.html:74
			qw422016.E().S(x.Profile.String())
//line views/vadmin/Sockets.html:74
			qw422016.N().S(`</td>
              <td>`)
//line views/vadmin/Sockets.html:75
			qw422016.E().S(x.Svc)
//line views/vadmin/Sockets.html:75
			qw422016.N().S(`</td>
              <td>`)
//line views/vadmin/Sockets.html:76
			qw422016.E().S(strings.Join(x.Channels, ", "))
//line views/vadmin/Sockets.html:76
			qw422016.N().S(`</td>
              <td class="shrink"><a href="#modal-conn-`)
//line views/vadmin/Sockets.html:77
			qw422016.E().S(x.ID.String())
//line views/vadmin/Sockets.html:77
			qw422016.N().S(`"><button type="button">JSON</button></a></td>
            </tr>
`)
//line views/vadmin/Sockets.html:79
		}
//line views/vadmin/Sockets.html:79
		qw422016.N().S(`          </tbody>
        </table>
      </div>
`)
//line views/vadmin/Sockets.html:83
	}
//line views/vadmin/Sockets.html:83
	qw422016.N().S(`    </div>
  </div>
`)
//line views/vadmin/Sockets.html:86
	for _, x := range p.Connections {
//line views/vadmin/Sockets.html:86
		qw422016.N().S(`  `)
//line views/vadmin/Sockets.html:87
		components.StreamJSONModal(qw422016, "conn-"+x.ID.String(), "Connection ["+x.ID.String()+"] JSON", x, 1)
//line views/vadmin/Sockets.html:87
		qw422016.N().S(`
`)
//line views/vadmin/Sockets.html:88
	}
//line views/vadmin/Sockets.html:89
}

//line views/vadmin/Sockets.html:89
func (p *Sockets) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:89
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Sockets.html:89
	p.StreamBody(qw422016, as, ps)
//line views/vadmin/Sockets.html:89
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Sockets.html:89
}

//line views/vadmin/Sockets.html:89
func (p *Sockets) Body(as *app.State, ps *cutil.PageState) string {
//line views/vadmin/Sockets.html:89
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Sockets.html:89
	p.WriteBody(qb422016, as, ps)
//line views/vadmin/Sockets.html:89
	qs422016 := string(qb422016.B)
//line views/vadmin/Sockets.html:89
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Sockets.html:89
	return qs422016
//line views/vadmin/Sockets.html:89
}

//line views/vadmin/Sockets.html:91
type Channel struct {
	layout.Basic
	Channel *websocket.Channel
	Members []*websocket.Connection
}

//line views/vadmin/Sockets.html:97
func (p *Channel) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:97
	qw422016.N().S(`
  <div class="card">
    <div class="right"><a href="#modal-channel"><button type="button">JSON</button></a></div>
    <h3>Channel [`)
//line views/vadmin/Sockets.html:100
	qw422016.E().S(p.Channel.Key)
//line views/vadmin/Sockets.html:100
	qw422016.N().S(`]</h3>
  </div>
  `)
//line views/vadmin/Sockets.html:102
	components.StreamJSONModal(qw422016, "channel", "Channel ["+p.Channel.Key+"] JSON", p.Channel, 1)
//line views/vadmin/Sockets.html:102
	qw422016.N().S(`
`)
//line views/vadmin/Sockets.html:103
	for _, m := range p.Members {
//line views/vadmin/Sockets.html:103
		qw422016.N().S(`  `)
//line views/vadmin/Sockets.html:104
		StreamConnectionCard(qw422016, m, as, ps)
//line views/vadmin/Sockets.html:104
		qw422016.N().S(`
`)
//line views/vadmin/Sockets.html:105
	}
//line views/vadmin/Sockets.html:106
}

//line views/vadmin/Sockets.html:106
func (p *Channel) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:106
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Sockets.html:106
	p.StreamBody(qw422016, as, ps)
//line views/vadmin/Sockets.html:106
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Sockets.html:106
}

//line views/vadmin/Sockets.html:106
func (p *Channel) Body(as *app.State, ps *cutil.PageState) string {
//line views/vadmin/Sockets.html:106
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Sockets.html:106
	p.WriteBody(qb422016, as, ps)
//line views/vadmin/Sockets.html:106
	qs422016 := string(qb422016.B)
//line views/vadmin/Sockets.html:106
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Sockets.html:106
	return qs422016
//line views/vadmin/Sockets.html:106
}

//line views/vadmin/Sockets.html:108
type Connection struct {
	layout.Basic
	Connection *websocket.Connection
}

//line views/vadmin/Sockets.html:113
func (p *Connection) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:113
	qw422016.N().S(`
  `)
//line views/vadmin/Sockets.html:114
	StreamConnectionCard(qw422016, p.Connection, as, ps)
//line views/vadmin/Sockets.html:114
	qw422016.N().S(`
  <div class="card">
    <h3>Send Message</h3>
    <form action="/admin/sockets/conn/`)
//line views/vadmin/Sockets.html:117
	qw422016.E().S(p.Connection.ID.String())
//line views/vadmin/Sockets.html:117
	qw422016.N().S(`/send" method="post">
      <div class="overflow full-width">
        <table class="mt expanded">
          <tbody>
            `)
//line views/vadmin/Sockets.html:121
	components.StreamTableInput(qw422016, "from", "", "From", ps.Profile.ID.String(), 5, "The user this message is from")
//line views/vadmin/Sockets.html:121
	qw422016.N().S(`
            `)
//line views/vadmin/Sockets.html:122
	components.StreamTableInput(qw422016, "channel", "", "Channel", "", 5, "The channel this message is for")
//line views/vadmin/Sockets.html:122
	qw422016.N().S(`
            `)
//line views/vadmin/Sockets.html:123
	components.StreamTableInput(qw422016, "cmd", "", "Command", "", 5, "The command for this message")
//line views/vadmin/Sockets.html:123
	qw422016.N().S(`
            `)
//line views/vadmin/Sockets.html:124
	components.StreamTableTextarea(qw422016, "param", "", "Parameter", 8, "", 5, "JSON object message payload")
//line views/vadmin/Sockets.html:124
	qw422016.N().S(`
            <tr><td colspan="2"><button type="submit">Send</button></td></tr>
          </tbody>
        </table>
      </div>
    </form>
  </div>
`)
//line views/vadmin/Sockets.html:131
}

//line views/vadmin/Sockets.html:131
func (p *Connection) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:131
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Sockets.html:131
	p.StreamBody(qw422016, as, ps)
//line views/vadmin/Sockets.html:131
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Sockets.html:131
}

//line views/vadmin/Sockets.html:131
func (p *Connection) Body(as *app.State, ps *cutil.PageState) string {
//line views/vadmin/Sockets.html:131
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Sockets.html:131
	p.WriteBody(qb422016, as, ps)
//line views/vadmin/Sockets.html:131
	qs422016 := string(qb422016.B)
//line views/vadmin/Sockets.html:131
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Sockets.html:131
	return qs422016
//line views/vadmin/Sockets.html:131
}

//line views/vadmin/Sockets.html:133
func StreamConnectionCard(qw422016 *qt422016.Writer, c *websocket.Connection, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:133
	qw422016.N().S(`
  <div class="card">
    <div class="right"><a href="#modal-connection-`)
//line views/vadmin/Sockets.html:135
	qw422016.E().S(c.ID.String())
//line views/vadmin/Sockets.html:135
	qw422016.N().S(`"><button type="button">JSON</button></a></div>
    <h3>`)
//line views/vadmin/Sockets.html:136
	qw422016.E().S(c.ID.String())
//line views/vadmin/Sockets.html:136
	qw422016.N().S(` (`)
//line views/vadmin/Sockets.html:136
	qw422016.E().S(c.Username())
//line views/vadmin/Sockets.html:136
	qw422016.N().S(`)</h3>
    <div class="overflow full-width">
      <table class="mt expanded">
        <tbody>
          <tr>
            <th>Connection ID</th>
            <td>`)
//line views/vadmin/Sockets.html:142
	qw422016.E().S(c.ID.String())
//line views/vadmin/Sockets.html:142
	qw422016.N().S(`</td>
          </tr>
          <tr>
            <th>User ID</th>
            <td><a href="/admin/db/user/`)
//line views/vadmin/Sockets.html:146
	qw422016.E().S(c.Profile.ID.String())
//line views/vadmin/Sockets.html:146
	qw422016.N().S(`">`)
//line views/vadmin/Sockets.html:146
	qw422016.E().S(c.Profile.ID.String())
//line views/vadmin/Sockets.html:146
	qw422016.N().S(`</a></td>
          </tr>
          <tr>
            <th>Name</th>
            <td>`)
//line views/vadmin/Sockets.html:150
	qw422016.E().S(c.Username())
//line views/vadmin/Sockets.html:150
	qw422016.N().S(`</td>
          </tr>
          <tr>
            <th>Theme</th>
            <td>`)
//line views/vadmin/Sockets.html:154
	qw422016.E().S(c.Profile.Theme)
//line views/vadmin/Sockets.html:154
	qw422016.N().S(`</td>
          </tr>
          <tr>
            <th>Service</th>
            <td>`)
//line views/vadmin/Sockets.html:158
	qw422016.E().S(c.Svc)
//line views/vadmin/Sockets.html:158
	qw422016.N().S(`</td>
          </tr>
          <tr>
            <th>Channels</th>
            <td>`)
//line views/vadmin/Sockets.html:162
	qw422016.E().S(strings.Join(c.Channels, ", "))
//line views/vadmin/Sockets.html:162
	qw422016.N().S(`</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  `)
//line views/vadmin/Sockets.html:168
	components.StreamJSONModal(qw422016, "connection-"+c.ID.String(), "Connection ["+c.ID.String()+"] JSON", c, 1)
//line views/vadmin/Sockets.html:168
	qw422016.N().S(`
`)
//line views/vadmin/Sockets.html:169
}

//line views/vadmin/Sockets.html:169
func WriteConnectionCard(qq422016 qtio422016.Writer, c *websocket.Connection, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:169
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Sockets.html:169
	StreamConnectionCard(qw422016, c, as, ps)
//line views/vadmin/Sockets.html:169
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Sockets.html:169
}

//line views/vadmin/Sockets.html:169
func ConnectionCard(c *websocket.Connection, as *app.State, ps *cutil.PageState) string {
//line views/vadmin/Sockets.html:169
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Sockets.html:169
	WriteConnectionCard(qb422016, c, as, ps)
//line views/vadmin/Sockets.html:169
	qs422016 := string(qb422016.B)
//line views/vadmin/Sockets.html:169
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Sockets.html:169
	return qs422016
//line views/vadmin/Sockets.html:169
}
