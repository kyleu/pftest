// Code generated by qtc from "Sockets.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Content managed by Project Forge, see [projectforge.md] for details. -->

//line views/vadmin/Sockets.html:2
package vadmin

//line views/vadmin/Sockets.html:2
import (
	"strings"

	"github.com/kyleu/pftest/app"
	"github.com/kyleu/pftest/app/controller/cutil"
	"github.com/kyleu/pftest/app/lib/websocket"
	"github.com/kyleu/pftest/views/components"
	"github.com/kyleu/pftest/views/layout"
)

//line views/vadmin/Sockets.html:12
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vadmin/Sockets.html:12
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vadmin/Sockets.html:12
type Sockets struct {
	layout.Basic
	Channels    []string
	Connections []*websocket.Connection
	Context     any
}

//line views/vadmin/Sockets.html:19
func (p *Sockets) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:19
	qw422016.N().S(`
  <div class="card">
    <h3>Channels</h3>
    <div class="mt">
`)
//line views/vadmin/Sockets.html:23
	if len(p.Channels) == 0 {
//line views/vadmin/Sockets.html:23
		qw422016.N().S(`      <em>no active channels</em>
`)
//line views/vadmin/Sockets.html:25
	} else {
//line views/vadmin/Sockets.html:25
		qw422016.N().S(`      <ul>
`)
//line views/vadmin/Sockets.html:27
		for _, x := range p.Channels {
//line views/vadmin/Sockets.html:27
			qw422016.N().S(`        <li>`)
//line views/vadmin/Sockets.html:28
			qw422016.E().S(x)
//line views/vadmin/Sockets.html:28
			qw422016.N().S(`</li>
`)
//line views/vadmin/Sockets.html:29
		}
//line views/vadmin/Sockets.html:29
		qw422016.N().S(`      </ul>
`)
//line views/vadmin/Sockets.html:31
	}
//line views/vadmin/Sockets.html:31
	qw422016.N().S(`    </div>
  </div>
  <div class="card">
    <h3>Active Connections</h3>
    <div class="mt">
`)
//line views/vadmin/Sockets.html:37
	if len(p.Connections) == 0 {
//line views/vadmin/Sockets.html:37
		qw422016.N().S(`      <em>no active connections</em>
`)
//line views/vadmin/Sockets.html:39
	} else {
//line views/vadmin/Sockets.html:39
		qw422016.N().S(`      <table class="expanded">
        <thead>
          <tr>
            <th class="shrink">ID</th>
            <th>Profile</th>
            <th>Service</th>
            <th>Channels</th>
          </tr>
        </thead>
        <tbody>
`)
//line views/vadmin/Sockets.html:50
		for _, x := range p.Connections {
//line views/vadmin/Sockets.html:50
			qw422016.N().S(`          <tr>
            <td class="shrink">`)
//line views/vadmin/Sockets.html:52
			qw422016.E().S(x.ID.String())
//line views/vadmin/Sockets.html:52
			qw422016.N().S(`</td>
            <td>`)
//line views/vadmin/Sockets.html:53
			qw422016.E().S(x.Profile.String())
//line views/vadmin/Sockets.html:53
			qw422016.N().S(`</td>
            <td>`)
//line views/vadmin/Sockets.html:54
			qw422016.E().S(x.Svc)
//line views/vadmin/Sockets.html:54
			qw422016.N().S(`</td>
            <td>`)
//line views/vadmin/Sockets.html:55
			qw422016.E().S(strings.Join(x.Channels, ", "))
//line views/vadmin/Sockets.html:55
			qw422016.N().S(`</td>
          </tr>
`)
//line views/vadmin/Sockets.html:57
		}
//line views/vadmin/Sockets.html:57
		qw422016.N().S(`        </tbody>
      </table>
`)
//line views/vadmin/Sockets.html:60
	}
//line views/vadmin/Sockets.html:60
	qw422016.N().S(`    </div>
  </div>
`)
//line views/vadmin/Sockets.html:63
	if p.Context != nil {
//line views/vadmin/Sockets.html:63
		qw422016.N().S(`  <div class="card">
    <h3>Server Context</h3>
    `)
//line views/vadmin/Sockets.html:66
		qw422016.N().S(components.JSON(p.Context))
//line views/vadmin/Sockets.html:66
		qw422016.N().S(`
  </div>
`)
//line views/vadmin/Sockets.html:68
	}
//line views/vadmin/Sockets.html:69
}

//line views/vadmin/Sockets.html:69
func (p *Sockets) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Sockets.html:69
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Sockets.html:69
	p.StreamBody(qw422016, as, ps)
//line views/vadmin/Sockets.html:69
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Sockets.html:69
}

//line views/vadmin/Sockets.html:69
func (p *Sockets) Body(as *app.State, ps *cutil.PageState) string {
//line views/vadmin/Sockets.html:69
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Sockets.html:69
	p.WriteBody(qb422016, as, ps)
//line views/vadmin/Sockets.html:69
	qs422016 := string(qb422016.B)
//line views/vadmin/Sockets.html:69
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Sockets.html:69
	return qs422016
//line views/vadmin/Sockets.html:69
}
